{"ast":null,"code":"var _jsxFileName = \"/home/sean/odin-project/etch-a-sketch/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Square from './square';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [gridSize, setGridSize] = useState(16);\n  const [clear, setClear] = useState(false);\n\n  const handleInput = e => {\n    setGridSize(e.target.value);\n  };\n\n  const createGridArray = num => {\n    let arr = [];\n\n    for (let i = 0; i < num * num; i++) {\n      arr.push(i);\n    }\n\n    return arr;\n  };\n\n  let gridArray = createGridArray(gridSize);\n\n  const makeGridStyleArray = num => {\n    let arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push('1fr');\n    }\n\n    return arr.join(' ');\n  };\n\n  let gridStyleArray = makeGridStyleArray(gridSize);\n  const gridStyle = {\n    gridTemplateColumns: gridStyleArray\n  };\n\n  const handleClick = () => {\n    setClear();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Etch-a-Sketch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        style: gridStyle,\n        children: gridArray.map(id => {\n          return /*#__PURE__*/_jsxDEV(Square, {\n            clear: clear\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: gridSize,\n        onChange: handleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear\",\n        onClick: handleClick,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vbYwCUqFoWgVEPB6Sw/xY9IR/+8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sean/odin-project/etch-a-sketch/src/App.js"],"names":["useState","Square","App","gridSize","setGridSize","clear","setClear","handleInput","e","target","value","createGridArray","num","arr","i","push","gridArray","makeGridStyleArray","join","gridStyleArray","gridStyle","gridTemplateColumns","handleClick","map","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMO,WAAW,GAAIC,CAAD,IAAO;AACzBJ,IAAAA,WAAW,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,QAAMC,eAAe,GAAIC,GAAD,IAAS;AAC/B,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,GAACA,GAAxB,EAA6BE,CAAC,EAA9B,EAAkC;AAChCD,MAAAA,GAAG,CAACE,IAAJ,CAASD,CAAT;AACD;;AACD,WAAOD,GAAP;AACD,GAND;;AAOA,MAAIG,SAAS,GAAGL,eAAe,CAACR,QAAD,CAA/B;;AAEA,QAAMc,kBAAkB,GAAIL,GAAD,IAAS;AAClC,QAAIC,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGF,GAAlB,EAAuBE,CAAC,EAAxB,EAA2B;AACzBD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT;AACD;;AACD,WAAOF,GAAG,CAACK,IAAJ,CAAS,GAAT,CAAP;AACD,GAND;;AAQA,MAAIC,cAAc,GAAGF,kBAAkB,CAACd,QAAD,CAAvC;AAEA,QAAMiB,SAAS,GAAG;AAChBC,IAAAA,mBAAmB,EAAEF;AADL,GAAlB;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxBhB,IAAAA,QAAQ;AACT,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAEc,SAAvC;AAAA,kBACGJ,SAAS,CAACO,GAAV,CAAeC,EAAD,IAAQ;AACrB,8BACE,QAAC,MAAD;AAAiB,YAAA,KAAK,EAAEnB;AAAxB,aAAamB,EAAb;AAAA;AAAA;AAAA;AAAA,kBADF;AAGD,SAJA;AADH;AAAA;AAAA;AAAA;AAAA,cAFJ,eASE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAErB,QAA5B;AAAsC,QAAA,QAAQ,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAA0B,QAAA,OAAO,EAAEe,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnDQpB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport Square from './square';\n\nfunction App() {\n  const [gridSize, setGridSize] = useState(16);\n  const [clear, setClear] = useState(false);\n\n  const handleInput = (e) => {\n    setGridSize(e.target.value)\n  }\n\n  const createGridArray = (num) => {\n    let arr = [];\n    for (let i = 0; i < num*num; i++) {\n      arr.push(i);\n    }\n    return arr\n  }\n  let gridArray = createGridArray(gridSize);\n\n  const makeGridStyleArray = (num) => {\n    let arr = [];\n    for (let i=0; i < num; i++){\n      arr.push('1fr')\n    }\n    return arr.join(' ')\n  }\n\n  let gridStyleArray = makeGridStyleArray(gridSize)\n  \n  const gridStyle = {\n    gridTemplateColumns: gridStyleArray,\n  }\n\n  const handleClick = () => {\n    setClear()\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"body\">\n        <h1>Etch-a-Sketch</h1>\n          <div className='grid-container' style={gridStyle}>\n            {gridArray.map((id) => {\n              return (\n                <Square key={id} clear={clear} />\n              )\n            })}\n          </div>\n        <input type=\"number\" value={gridSize} onChange={handleInput} />\n        <button className=\"clear\" onClick={handleClick}>Clear</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}